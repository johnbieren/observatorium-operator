apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/name: thanos-receive
    app.kubernetes.io/tracing: jaeger-agent
    controller.receive.thanos.io: thanos-receive-controller
    controller.receive.thanos.io/hashring: default
  name: thanos-receive-default
  namespace: observatorium
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/instance: default
      app.kubernetes.io/name: thanos-receive
  serviceName: thanos-receive-default
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: default
        app.kubernetes.io/name: thanos-receive
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - thanos-receive
              namespaces:
              - observatorium
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - receive
        - --grpc-address=0.0.0.0:10901
        - --http-address=0.0.0.0:10902
        - --remote-write.address=0.0.0.0:19291
        - --objstore.config=$(OBJSTORE_CONFIG)
        - --tsdb.path=/var/thanos/receive
        - --label=replica="$(NAME)"
        - --label=receive="true"
        - --tsdb.retention=6h
        - --receive.hashrings-file=/var/lib/thanos-receive/hashrings.json
        - --receive.local-endpoint=http://$(NAME).thanos-receive-default.$(NAMESPACE).svc.cluster.local:19291/api/v1/receive
        - |
          --tracing.config=
            type: JAEGER
            config:
              service_name: thanos-receive-default
              sampler_type: ratelimiting
              sampler_param: 2
        - --receive.replication-factor=3
        env:
        - name: NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: OBJSTORE_CONFIG
          valueFrom:
            secretKeyRef:
              key: thanos.yaml
              name: thanos-objectstorage
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: quay.io/thanos/thanos:v0.9.0
        livenessProbe:
          failureThreshold: 8
          httpGet:
            path: /-/healthy
            port: 10902
            scheme: HTTP
          periodSeconds: 30
        name: thanos-receive
        ports:
        - containerPort: 10901
          name: grpc
        - containerPort: 10902
          name: http
        - containerPort: 19291
          name: remote-write
        readinessProbe:
          failureThreshold: 20
          httpGet:
            path: /-/ready
            port: 10902
            scheme: HTTP
          periodSeconds: 5
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 512Mi
        volumeMounts:
        - mountPath: /var/thanos/receive
          name: thanos-receive-data
          readOnly: false
        - mountPath: /var/lib/thanos-receive
          name: observatorium-tenants
      - args:
        - --reporter.grpc.host-port=dns:///jaeger-collector-headless.$(NAMESPACE).svc:14250
        - --reporter.type=grpc
        - --jaeger.tags=pod.namespace=$(NAMESPACE),pod.name=$(POD)
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: jaegertracing/jaeger-agent:1.14.0
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /
            port: 14271
            scheme: HTTP
        name: jaeger-agent
        ports:
        - containerPort: 6831
          name: jaeger-thrift
        - containerPort: 5778
          name: configs
        - containerPort: 14271
          name: metrics
        resources:
          limits:
            cpu: 128m
            memory: 128Mi
          requests:
            cpu: 32m
            memory: 64Mi
      terminationGracePeriodSeconds: 120
      volumes:
      - configMap:
          name: observatorium-tenants-generated
        name: observatorium-tenants
  volumeClaimTemplates:
  - metadata:
      name: thanos-receive-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 50Gi
      storageClassName: standard
