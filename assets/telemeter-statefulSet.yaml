apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: telemeter-server
  namespace: observatorium
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      k8s-app: telemeter-server
  serviceName: telemeter-server
  template:
    metadata:
      labels:
        k8s-app: telemeter-server
    spec:
      containers:
      - command:
        - /usr/bin/telemeter-server
        - --join=telemeter-server
        - --name=$(NAME)
        - --listen=0.0.0.0:8443
        - --listen-internal=0.0.0.0:8081
        - --listen-cluster=0.0.0.0:8082
        - --shared-key=/etc/pki/service/tls.key
        - --tls-key=/etc/pki/service/tls.key
        - --tls-crt=/etc/pki/service/tls.crt
        - --internal-tls-key=/etc/pki/service/tls.key
        - --internal-tls-crt=/etc/pki/service/tls.crt
        - --authorize=https://api.openshift.com/api/accounts_mgmt/v1/cluster_registrations
        - --oidc-issuer=$(OIDC_ISSUER)
        - --client-id=$(CLIENT_ID)
        - --client-secret=$(CLIENT_SECRET)
        - --memcached=memcached-0.memcached.observatorium.svc.cluster.local:11211
        - --token-expire-seconds=3600
        - --forward-url=http://thanos-receive.observatorium.svc.cluster.local:19291/api/v1/receive
        env:
        - name: NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: OIDC_ISSUER
          valueFrom:
            secretKeyRef:
              key: oidc_issuer
              name: telemeter-server
        - name: CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: client_secret
              name: telemeter-server
        - name: CLIENT_ID
          valueFrom:
            secretKeyRef:
              key: client_id
              name: telemeter-server
        image: quay.io/app-sre/telemeter:c205c41
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8443
            scheme: HTTPS
        name: telemeter-server
        ports:
        - containerPort: 8443
          name: external
        - containerPort: 8081
          name: internal
        - containerPort: 8082
          name: cluster
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 8443
            scheme: HTTPS
        resources:
          limits: {}
          requests: {}
        volumeMounts:
        - mountPath: /etc/pki/service
          name: telemeter-server-tls
          readOnly: false
      serviceAccountName: telemeter-server
      volumes:
      - name: secret-telemeter-server
        secret:
          secretName: telemeter-server
      - name: telemeter-server-tls
        secret:
          secretName: telemeter-server-shared
